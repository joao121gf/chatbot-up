// leitor de qr code
const qrcode = require("qrcode-terminal");
const { Client, MessageMedia } = require("whatsapp-web.js");
const client = new Client();

// servi√ßo de leitura do qr code
client.on("qr", (qr) => {
  qrcode.generate(qr, { small: true });
});

// Ap√≥s isso ele diz que foi tudo certo
client.on("ready", () => {
  console.log("Tudo certo! WhatsApp conectado.");
});

// E inicializa tudo
client.initialize();

const delay = (ms) => new Promise((res) => setTimeout(res, ms)); // Fun√ß√£o que usamos para criar o delay entre uma a√ß√£o e outra

// Funil
client.on("message", async (msg) => {
  if (
    msg.body.match(/(Ol√°, gostaria de mais informa√ß√µes)/i) &&
    msg.from.endsWith("@c.us")
  ) {
    const chat = await msg.getChat();
    const contact = await msg.getContact();
    const name = contact.pushname; // Pegando o nome do contato

    // Delay de 2 segundos antes de reagir
    await delay(3500);
    // Reagir com um emoji de cora√ß√£o"
    await msg.react("‚ù§Ô∏è");

    // Mensagem inicial
    await delay(3000); // delay de 3 segundos
    await chat.sendStateTyping(); // Simulando Digita√ß√£o
    await delay(3000); // Delay de 3 segundos
    await client.sendMessage(
      msg.from,
      `Opa ${
        name.split(" ")[0]
      }, boa ${getCurrentGreeting()}! üòÅ Seja bem-vindo! Fico feliz que voc√™ esteja aqui, meu nome √© Jo√£o e sou fundador da Bravalink.`
    );

    await delay(3000); // delay de 3 segundos
    await chat.sendStateTyping(); // Simulando Digita√ß√£o
    await delay(3000); // Delay de 3 segundos

    // Enviar foto de apresenta√ß√£o
    const media = MessageMedia.fromFilePath("imagem/projects.png");
    await client.sendMessage(msg.from, media);

    await delay(2000); // esperar 2 segundos
    await chat.sendStateTyping(); // Simulando Digita√ß√£o
    await delay(2000); // Delay de 2 segundos
    await client.sendMessage(
      msg.from,
      "Voc√™ est√° pensando em criar um site? Que tipo de servi√ßo voc√™ oferece?"
    );
  }
});

// Fun√ß√£o para determinar a sauda√ß√£o com base na hora do dia
function getCurrentGreeting() {
  const hour = new Date().getHours();
  if (hour < 12) return "dia";
  if (hour < 18) return "tarde";
  return "noite";
}
